services:
  postgres:
    image: "postgres:15.3-bookworm"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    profiles:
      - "dev"
      - "prod"

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redisdata:/data
    profiles:
      - "dev"
      - "prod"

  backend:
    build:
      context: ./
      dockerfile: ./backend/docker/prod/Dockerfile
    working_dir: /app
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${PGPORT}/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
      - redis
    profiles:
      - "prod"

  backend-dev:
    build:
      context: ./
      dockerfile: ./backend/docker/dev/Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/src:/usr/local/app/backend/src
      - ./backend/tsconfig.json:/usr/local/app/backend/tsconfig.json
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
      - redis
    profiles:
      - "dev"

  frontend:
    build:
      context: ./
      dockerfile: ./frontend/docker/prod/Dockerfile
    env_file:
      - .env
    working_dir: /app
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - backend
    profiles:
      - "prod"

  frontend-dev:
    build:
      context: ./
      dockerfile: ./frontend/docker/dev/Dockerfile
    env_file:
      - .env
    volumes:
      - ./frontend/src:/usr/local/app/frontend/src
      - ./frontend/public:/usr/local/app/frontend/public
      - ./frontend/index.html:/usr/local/app/frontend/index.html
      - ./frontend/tsconfig.app.json:/usr/local/app/frontend/tsconfig.app.json
      - ./frontend/tsconfig.node.json:/usr/local/app/frontend/tsconfig.node.json
      - ./frontend/tsconfig.json:/usr/local/app/frontend/tsconfig.json
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    profiles:
      - "dev"

  nginx-dev:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80" # You can change the host port if you want
    env_file:
      - .env
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend-dev
      - backend-dev
    profiles:
      - "dev"

volumes:
  pgdata:
  redisdata:
